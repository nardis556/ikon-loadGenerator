#!/bin/bash

echo "Enter the environment ('sandbox' or 'staging'):"
read environment

if [[ "$environment" != "sandbox" && "$environment" != "staging" ]]; then
    echo "Invalid environment specified: $environment"
    echo "Environment must be 'sandbox' or 'staging'"
    exit 1
fi

echo "Do you want to create a base directory under HOME? (yes/no):"
read create_base

if [[ "$create_base" == "yes" ]]; then
    echo "Enter subdirectory name where the base directory should be created (relative to ${HOME}):"
    read base_subdir
    base_dir="${HOME}/${base_subdir}"
else
    base_dir="${HOME}/loadgen"
fi

mkdir -p "${base_dir}"
cd "${base_dir}"

echo "Do you want to create a subdirectory for the environment files? (yes/no):"
read create_subdir

if [[ "$create_subdir" == "yes" ]]; then
    echo "Enter the subdirectory where the files should be stored (relative to ${base_dir}):"
    read dir_name
    full_dir="${base_dir}/${dir_name}"
else
    full_dir="${base_dir}"
fi

mkdir -p "${full_dir}"

download_files() {
    local urls=("${!1}")
    local filenames=("${!2}")
    local env_dir="$3"
    for i in "${!urls[@]}"; do
        echo "Downloading ${filenames[i]} from ${urls[i]}"
        curl -s -o "${env_dir}/${filenames[i]}" "${urls[i]}" || echo "Failed to download ${urls[i]}"
    done
}

create_docker_compose() {
    local env_dir="$1"
    cat > "${env_dir}/docker-compose.yml" <<EOF
services:
  ${environment}:
    image: nardis555/ikon-loadgen:latest
    volumes:
      - .env:/usr/src/app/.env
      - .env.ACCOUNTS:/usr/src/app/.env.ACCOUNTS
      - .env.ORDERS:/usr/src/app/.env.ORDERS
EOF
}

# gist raw URLs for the environment files, sorted by sandbox_filenames
sandbox_urls=(
    ""
    ""
    ""
)
sandbox_filenames=(
    ".env"
    ".env.ACCOUNTS"
    ".env.ORDERS"
)

# gist raw URLs for the environment files, sorted by sandbox_filenames
staging_urls=(
    ""
    ""
    ""
)
staging_filenames=(
    ".env"
    ".env.ACCOUNTS"
    ".env.ORDERS"
)

case $environment in
    sandbox)
        urls=("${sandbox_urls[@]}")
        filenames=("${sandbox_filenames[@]}")
        ;;
    staging)
        urls=("${staging_urls[@]}")
        filenames=("${staging_filenames[@]}")
        ;;
esac

download_files "urls[@]" "filenames[@]" "${full_dir}"
create_docker_compose "${full_dir}"
echo "Environment files and Docker Compose file have been successfully set up in ${full_dir}"
